peak_list[[1]][1:5,]
anno_list = peak_list
anno_names = names(anno_list)
names_order = unique(anno_names)
protein = NULL
protein_order = unique(protein)
width = 0.6
xangle = 20
fill_position = T
anno_num = 2
legend_position = "right"
color_palette = "Set2"
xlab = NULL
ylab = NULL
subtitle = NULL
main = NULL
# Check that inputs are OK.
if(!is.list(anno_list)) { stop("'anno_list' must be a (named) list of data frames with the genomic coordinates of peak and its genomic annotation. Alternatively, elements in 'anno_list' can be of the class 'csAnno' (output of annotatePeak()).") }
# Set the names of each annotatePeak object in the list with the vector anno_names
anno <- purrr::set_names(x = anno_list, nm = anno_names) %>%
# Convert to tibble
purrr::map(~as_tibble(.x)) %>%
# Reformat annotation. Just change the "Promoter ..." annotation to "Promoter".
purrr::map(~dplyr::mutate(.x, annotation = annotation %>% gsub(" \\(.*$", "", .))) %>%
# Write an extra column to each dataframe with the name of the dataframe (provided in anno_names)
purrr::imap(~dplyr::mutate(.data = .x, condition = .y)) %>%
# Select only the annotation and condition columns
purrr::map(~dplyr::select(.data = .x, annotation, condition))
anno
anno_list
peak_list <- list.files("../testdata", "peak", full.names = T, recursive = T) %>%
purrr::set_names(c("PeakX", "PeakY")) %>%
purrr::map(~read.delim(.x))
peak_list
anno_list = peak_list
# Set the names of each annotatePeak object in the list with the vector anno_names
anno <- purrr::set_names(x = anno_list, nm = anno_names) %>%
# Convert to tibble
purrr::map(~as_tibble(.x)) %>%
# Reformat annotation. Just change the "Promoter ..." annotation to "Promoter".
purrr::map(~dplyr::mutate(.x, annotation = annotation %>% gsub(" \\(.*$", "", .))) %>%
# Write an extra column to each dataframe with the name of the dataframe (provided in anno_names)
purrr::imap(~dplyr::mutate(.data = .x, condition = .y)) %>%
# Select only the annotation and condition columns
purrr::map(~dplyr::select(.data = .x, annotation, condition))
# Bind dataframes by rows
anno_df <- anno %>% bind_rows() %>%
# Convert the condition to factor and give it an order
dplyr::mutate(condition = factor(condition, levels = names_order))
anno_df <- anno_df %>% dplyr::mutate(annotation = if_else(annotation == "Promoter", "Promoter", "Distal"))
g <- g + geom_bar(position = "fill", color = "Black", width = width)
g
# Start ggplot -----
g <- ggplot(anno_df, aes(condition, fill = annotation))
g <- g + geom_bar(position = "fill", color = "Black", width = width)
g
anno_df
# Counts number of features
anno_df %>% dplyr::count(annotation,condition)
anno_df %>% dplyr::count(annotation, condition) %>% dplyr::group_by(condition) %>% dplyr::mutate(percent = n/sum(n)*100)
anno_df_counts <- anno_df %>% dplyr::count(annotation, condition) %>% dplyr::group_by(condition) %>% dplyr::mutate(percent = n/sum(n)*100) %>% dplyr::ungroup()
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, fill = annotation))
g <- g + geom_col(position = "fill", color = "Black", width = width)
g
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g + geom_col(position = "fill", color = "Black", width = width)
g <- g + geom_col(position = "fill", color = "Black", width = width)
g
# Write plot title, subtitle and axis labels
g <- g + ggtitle(main, subtitle) + ylab(ylab) + xlab(xlab) +
# Format colors with ggplot2 function scale_fill_brewer
scale_colors +
# Basic formatting
theme_pubr(legend = legend_position, x.text.angle = xangle, border = T) +
theme(legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "italic"),
axis.title = element_text(face = "bold"))
scale_colors <- scale_fill_manual(values = color_palette)
scale_colors
# Write plot title, subtitle and axis labels
g <- g + ggtitle(main, subtitle) + ylab(ylab) + xlab(xlab) +
# Format colors with ggplot2 function scale_fill_brewer
scale_colors +
# Basic formatting
theme_pubr(legend = legend_position, x.text.angle = xangle, border = T) +
theme(legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "italic"),
axis.title = element_text(face = "bold"))
g
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
if(fill_position){ g <- g + geom_col(position = "fill", color = "Black", width = width) }
# Colors of plot
if(length(color_palette)==1) { scale_colors <- scale_fill_brewer(palette = color_palette) }
# Write plot title, subtitle and axis labels
g <- g + ggtitle(main, subtitle) + ylab(ylab) + xlab(xlab) +
# Format colors with ggplot2 function scale_fill_brewer
scale_colors +
# Basic formatting
theme_pubr(legend = legend_position, x.text.angle = xangle, border = T) +
theme(legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "italic"),
axis.title = element_text(face = "bold"))
g
g + geom_text(aes(label = n))
g + geom_text(aes(label = n), stat = "identity")
g + geom_text(aes(label = n), position = position_fill(vjust = .5))
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5))
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_bar(color = "Black", width = width)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90)
g + geom_text(aes(label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(label = paste("N = " , n, sep = "")), angle = 90, vjust = .5)
g + geom_text(aes(label = paste("N = " , n, sep = "")), angle = 90, postition = position_stack(vjust = .5))
g + geom_text(aes(label = paste("N = " , percent, sep = "")), angle = 90, postition = position_stack(vjust = .5))
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), angle = 90, postition = position_stack(vjust = .5))
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = .5))
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 1))
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 0))
g <- ggplot(anno_df_counts, aes(condition, y = percent, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
g <- g + geom_col(color = "Black", width = width)
g
# Start ggplot -----
if(fill_position){ g <- ggplot(anno_df_counts, aes(condition, y = percent, fill = annotation)) }
# Create gglpot2-based barplot
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90)
g + geom_text(aes(label = paste("N = " , n, sep = "")))
g + geom_text(aes(label = paste("N = " , n, sep = "")), vjust = .5)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
if(fill_position){ g <- g + geom_col(position = "fill", color = "Black", width = width) }
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90)
g +
geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")))
g +
geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5), angle = 90))
g +
geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5), angle = 90)
# Write number or percentage
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, hjust = 0) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, hjust = 1)
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 1), hjust = 0)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 1), hjust = 0)
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 1), hjust = 0, vjust = 1)
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 1), hjust = 0, vjust = 1, angle = 90)
# Write number or percentage
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = 0) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
if(fill_position){ g <- g + geom_col(position = "fill", color = "Black", width = width) }
# Write number or percentage
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = 0) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1)
# Write number or percentage
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -1) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 2)
# Write number or percentage
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 2)
# Write number or percentage
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
anno_df_counts <- anno_df %>% dplyr::count(annotation, condition) %>% dplyr::group_by(condition) %>% dplyr::mutate(percent = n/sum(n)*100) %>% dplyr::ungroup()
anno_df_counts
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(percent = n/sum(n)*100) %>% dplyr::ungroup()
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = percent = n/sum(n)*100) %>% dplyr::ungroup()
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = sum(n), percent = n/total*100) %>% dplyr::ungroup()
anno_df_counts
g + scale_y_reverse()
# Bind dataframes by rows
anno_df <- anno %>% bind_rows() %>%
# Convert the condition to factor and give it an order
dplyr::mutate(condition = factor(condition, levels = names_order))
anno_df <- anno_df %>% dplyr::arrange(annotation)
anno_df
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = sum(n), percent = n/total*100) %>% dplyr::ungroup()
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = sum(n), percent = n/total*100, row_number = row_number())
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag =  lag(as.numeric(n))
)
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag =  ifelse(row_number == 1, 0, lag(as.numeric(n)))
)
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag  =  ifelse(row_number == 1, 0, lag(as.numeric(n))),
lab_y_pos = n + lag/2)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag  =  ifelse(row_number == 1, 0, lag(as.numeric(n))),
lab_y_pos = n + lag/2) %>%
dplyr::ungroup() %>%
dplyr::group_by(condition)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = percent, fill = annotation))
g + geom_col(color = "Black", width = width)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(position = "fill", color = "Black", width = width)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g <- g + scale_y_reverse()
g
g <- g + geom_col(color = "Black", width = width)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag  =  ifelse(row_number == 1, 0, lag(as.numeric(n))),
lab_ypos = n + lag/2) %>%
dplyr::ungroup() %>%
dplyr::group_by(condition)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aesy = lab_ypos, label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos, label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n)))
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2) %>%
dplyr::ungroup()
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n)))
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2) %>%
dplyr::ungroup()
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n)))
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2) %>%
dplyr::ungroup()
anno_df_counts
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos = n + cum_lag/2) %>%
dplyr::ungroup()
anno_df_counts
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
if(fill_position){ g <- g + geom_col(position = "fill", color = "Black", width = width) }
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos, label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5)
anno_df <- anno_df %>% dplyr::mutate(annotation = if_else(annotation == "Promoter", "Promoter", "Distal")) %>% dplyr::arrange(annotation)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos = n + cum_lag/2) %>%
dplyr::ungroup()
anno_df_counts
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 1), hjust = 0, vjust = 1, angle = 90)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90,)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = cum_lag/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = cum_lag/2+n/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2+n/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2-n/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2-n, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag-n/2, label = paste("N = " , n, sep = "")), angle = 90)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos   = total-cum_lag-n/2) %>%
dplyr::ungroup()
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_yposlabel = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos   = total-cum_lag-n/2) %>%
dplyr::ungroup()
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
if(fill_position){ g <- g + geom_col(position = "fill", color = "Black", width = width) }
else{ g <- g + geom_col(color = "Black", width = width) }
# Facet by protein
if(!is.null(protein)){ g <- g + facet_wrap(~prot) }
# Write number or percentage
if(write_counts) {
if(fill_position) {
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
} else {
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
}
}
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
counts_size = 3
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5, size = counts_size) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5, size = counts_size)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5, size = counts_size)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 0, vjust = -.5, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 0, vjust = 1.5, size = counts_size)
counts_angle = 90
g <- g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = counts_angle, vjust = -.5, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = counts_angle, vjust = 1.5, size = counts_size)
g
g + coord_polar()
g + coord_polar(theta = "y")
counts_angle
source("~/Desktop/Packages/plotmics/R/barAnno.R")
peak_list <- peak_list_csAnno %>% purrr::map(~as_tibble(.x))
# Load annotations for mouse mm10 genome
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(org.Mm.eg.db)
# Annotate peaks into csAnno object
peak_list_csAnno <- peak_list %>%
# convert to granges
purrr::map(~plyranges::as_granges(.x)) %>%
# annotate peaks
purrr::map(~ChIPseeker::annotatePeak(peak = .x, tssRegion = c(-2500, 2500),
TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene,
annoDb = "org.Mm.eg.db", level = "transcript"))
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", fig.width = 4, fig.height = 4,
error = FALSE, warning = FALSE, message = FALSE)
devtools::load_all("..")
library(dplyr)
library(purrr)
peak_list <- list.files("../testdata", "peak", full.names = T, recursive = T) %>%
purrr::set_names(c("PeakX", "PeakY")) %>%
purrr::map(~read.delim(.x))
barAnno(anno_list = peak_list)
peak_list
barAnno(anno_list = peak_list)
barAnno(anno_list = peak_list_csAnno)
barAnno(anno_list = peak_list, fill_position = F)
barAnno(anno_list = peak_list, anno_num = 2) # default
barAnno(anno_list = peak_list, anno_num = 3)
source("~/Desktop/Packages/plotmics/R/barAnno.R")
barAnno(anno_list = peak_list, anno_num = 3)
barAnno(anno_list = peak_list, anno_num = "all")
barAnno(anno_list = peak_list, anno_names = c("Condition X", "Condition Y"))
barAnno(anno_list = peak_list,
anno_names = c("Condition X", "Condition Y"),
names_order = c("Condition Y", "Condition X"))
barAnno(anno_list = peak_list, width = 0.6) # default
barAnno(anno_list = peak_list, width = 0.9)
barAnno(anno_list = peak_list, width = 1)
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"),
protein = c("protX", "protY"), protein_order = c("protY", "protX"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, main = "This is a title", subtitle = "This is a subtitle",
xlab = "This is the X-axis label", ylab = "This is the Y-axis label")
barAnno(anno_list = peak_list, legend_position = "none")
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"), counts_label = T)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = counts_angle, vjust = -.3, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = counts_angle, vjust = 1.3, size = counts_size)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = counts_angle, vjust = -.2, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = counts_angle, vjust = 1.2, size = counts_size)
source("~/Desktop/Packages/plotmics/R/barAnno.R")
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"),
protein = c("protX", "protY"), protein_order = c("protY", "protX"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, anno_names = c("Condition X", "Condition X"))
barAnno(anno_list = peak_list, counts_label = T)
barAnno(anno_list = peak_list, anno_num = 3, counts_label = T)
barAnno(anno_list = peak_list, anno_num = 3, counts_label = T, counts_angle = 0)
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), counts_label = T)
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), counts_label = T, counts_size = 5)
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, anno_num = 3, counts_label = T, counts_angle = 0)
* Labels within different pannels
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, counts_label = T, counts_size = 5)
barAnno(anno_list = peak_list, main = "This is a title", subtitle = "This is a subtitle",
xlab = "This is the X-axis label", ylab = "This is the Y-axis label")
devtools::document()
pkgdown::build_site(.)
pkgdown::build_site()
plotmics::barAnno()
