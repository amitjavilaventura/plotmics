anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(percent = n/sum(n)*100) %>% dplyr::ungroup()
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = percent = n/sum(n)*100) %>% dplyr::ungroup()
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = sum(n), percent = n/total*100) %>% dplyr::ungroup()
anno_df_counts
g + scale_y_reverse()
# Bind dataframes by rows
anno_df <- anno %>% bind_rows() %>%
# Convert the condition to factor and give it an order
dplyr::mutate(condition = factor(condition, levels = names_order))
anno_df <- anno_df %>% dplyr::arrange(annotation)
anno_df
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = sum(n), percent = n/total*100) %>% dplyr::ungroup()
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>% dplyr::mutate(total = sum(n), percent = n/total*100, row_number = row_number())
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag =  lag(as.numeric(n))
)
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag =  ifelse(row_number == 1, 0, lag(as.numeric(n)))
)
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag  =  ifelse(row_number == 1, 0, lag(as.numeric(n))),
lab_y_pos = n + lag/2)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag  =  ifelse(row_number == 1, 0, lag(as.numeric(n))),
lab_y_pos = n + lag/2) %>%
dplyr::ungroup() %>%
dplyr::group_by(condition)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = percent, fill = annotation))
g + geom_col(color = "Black", width = width)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(position = "fill", color = "Black", width = width)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g <- g + scale_y_reverse()
g
g <- g + geom_col(color = "Black", width = width)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total = sum(n),
percent = n/total*100,
row_number = row_number(),
lag  =  ifelse(row_number == 1, 0, lag(as.numeric(n))),
lab_ypos = n + lag/2) %>%
dplyr::ungroup() %>%
dplyr::group_by(condition)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aesy = lab_ypos, label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos, label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n)))
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2) %>%
dplyr::ungroup()
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n)))
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2) %>%
dplyr::ungroup()
anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n)))
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos = n + lag/2) %>%
dplyr::ungroup()
anno_df_counts
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos = n + cum_lag/2) %>%
dplyr::ungroup()
anno_df_counts
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
if(fill_position){ g <- g + geom_col(position = "fill", color = "Black", width = width) }
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos, label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5)
anno_df <- anno_df %>% dplyr::mutate(annotation = if_else(annotation == "Promoter", "Promoter", "Distal")) %>% dplyr::arrange(annotation)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos = n + cum_lag/2) %>%
dplyr::ungroup()
anno_df_counts
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(label = paste(round(percent,2), "%", sep = "")), postition = position_stack(vjust = 1), hjust = 0, vjust = 1, angle = 90)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90,)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = cum_lag/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = cum_lag/2+n/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2+n/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2-n/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag/2-n, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag, label = paste("N = " , n, sep = "")), angle = 90)
g + geom_text(aes(y = total-cum_lag-n/2, label = paste("N = " , n, sep = "")), angle = 90)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos   = total-cum_lag-n/2) %>%
dplyr::ungroup()
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_yposlabel = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
anno_df_counts <- anno_df %>%
dplyr::count(annotation, condition) %>%
dplyr::group_by(condition) %>%
dplyr::mutate(total      = sum(n),
percent    = n/total*100,
row_number = row_number(),
lag        = ifelse(row_number == 1, 0, lag(as.numeric(n))),
cum_lag    = cumsum(lag),
lab_ypos   = total-cum_lag-n/2) %>%
dplyr::ungroup()
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
g <- g + geom_col(color = "Black", width = width)
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
# Start ggplot -----
g <- ggplot(anno_df_counts, aes(condition, y = n, fill = annotation))
# Create gglpot2-based barplot
if(fill_position){ g <- g + geom_col(position = "fill", color = "Black", width = width) }
else{ g <- g + geom_col(color = "Black", width = width) }
# Facet by protein
if(!is.null(protein)){ g <- g + facet_wrap(~prot) }
# Write number or percentage
if(write_counts) {
if(fill_position) {
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
} else {
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5)
}
}
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5)
counts_size = 3
g + geom_text(aes(y = lab_ypos, label = paste("N = " , n, sep = "")), angle = 90, vjust = -.5, size = counts_size) +
geom_text(aes(y = lab_ypos,label = paste(round(percent,2), "%", sep = "")), angle = 90, vjust = 1.5, size = counts_size)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 90, vjust = -.5, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 90, vjust = 1.5, size = counts_size)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = 0, vjust = -.5, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = 0, vjust = 1.5, size = counts_size)
counts_angle = 90
g <- g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = counts_angle, vjust = -.5, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = counts_angle, vjust = 1.5, size = counts_size)
g
g + coord_polar()
g + coord_polar(theta = "y")
counts_angle
source("~/Desktop/Packages/plotmics/R/barAnno.R")
peak_list <- peak_list_csAnno %>% purrr::map(~as_tibble(.x))
# Load annotations for mouse mm10 genome
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(org.Mm.eg.db)
# Annotate peaks into csAnno object
peak_list_csAnno <- peak_list %>%
# convert to granges
purrr::map(~plyranges::as_granges(.x)) %>%
# annotate peaks
purrr::map(~ChIPseeker::annotatePeak(peak = .x, tssRegion = c(-2500, 2500),
TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene,
annoDb = "org.Mm.eg.db", level = "transcript"))
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", fig.width = 4, fig.height = 4,
error = FALSE, warning = FALSE, message = FALSE)
devtools::load_all("..")
library(dplyr)
library(purrr)
peak_list <- list.files("../testdata", "peak", full.names = T, recursive = T) %>%
purrr::set_names(c("PeakX", "PeakY")) %>%
purrr::map(~read.delim(.x))
barAnno(anno_list = peak_list)
peak_list
barAnno(anno_list = peak_list)
barAnno(anno_list = peak_list_csAnno)
barAnno(anno_list = peak_list, fill_position = F)
barAnno(anno_list = peak_list, anno_num = 2) # default
barAnno(anno_list = peak_list, anno_num = 3)
source("~/Desktop/Packages/plotmics/R/barAnno.R")
barAnno(anno_list = peak_list, anno_num = 3)
barAnno(anno_list = peak_list, anno_num = "all")
barAnno(anno_list = peak_list, anno_names = c("Condition X", "Condition Y"))
barAnno(anno_list = peak_list,
anno_names = c("Condition X", "Condition Y"),
names_order = c("Condition Y", "Condition X"))
barAnno(anno_list = peak_list, width = 0.6) # default
barAnno(anno_list = peak_list, width = 0.9)
barAnno(anno_list = peak_list, width = 1)
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"),
protein = c("protX", "protY"), protein_order = c("protY", "protX"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, main = "This is a title", subtitle = "This is a subtitle",
xlab = "This is the X-axis label", ylab = "This is the Y-axis label")
barAnno(anno_list = peak_list, legend_position = "none")
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"), counts_label = T)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = counts_angle, vjust = -.3, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = counts_angle, vjust = 1.3, size = counts_size)
g + geom_text(aes(label = paste("N = " , n, sep = "")), position = position_fill(vjust = .5), angle = counts_angle, vjust = -.2, size = counts_size) +
geom_text(aes(label = paste(round(percent,2), "%", sep = "")), position = position_fill(vjust = .5,), angle = counts_angle, vjust = 1.2, size = counts_size)
source("~/Desktop/Packages/plotmics/R/barAnno.R")
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond2"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"),
protein = c("protX", "protY"), protein_order = c("protY", "protX"))
barAnno(anno_list = peak_list, anno_names = c("Cond1", "Cond1"), protein = c("protX", "protY"))
barAnno(anno_list = peak_list, anno_names = c("Condition X", "Condition X"))
barAnno(anno_list = peak_list, counts_label = T)
barAnno(anno_list = peak_list, anno_num = 3, counts_label = T)
barAnno(anno_list = peak_list, anno_num = 3, counts_label = T, counts_angle = 0)
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), counts_label = T)
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), counts_label = T, counts_size = 5)
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, anno_num = 3, counts_label = T, counts_angle = 0)
* Labels within different pannels
barAnno(anno_list = peak_list, anno_names = c("cond1", "cond1"), protein = c("protX", "protY"), counts_label = T)
barAnno(anno_list = peak_list, counts_label = T, counts_size = 5)
barAnno(anno_list = peak_list, main = "This is a title", subtitle = "This is a subtitle",
xlab = "This is the X-axis label", ylab = "This is the Y-axis label")
devtools::document()
pkgdown::build_site(.)
pkgdown::build_site()
plotmics::barAnno()
devtools::document()
pkgdown::build_site()
gen_circle <- function(group, x_offset = 0, y_offset = 0, radius = 1,
radius_b = radius, theta_offset = 0, length.out = 100) {
tibble(group = group,
theta = seq(0, 2 * pi, length.out = length.out)) %>%
mutate(x_raw = radius * cos(theta),
y_raw = radius_b * sin(theta),
x = x_offset + x_raw * cos(theta_offset) - y_raw * sin(theta_offset),
y = y_offset + x_raw * sin(theta_offset) + y_raw * cos(theta_offset))
}
g <- ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 2, radius_b = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "red", alpha = .5) +
print(g)
library(tidyverse)
g <- ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 2, radius_b = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "red", alpha = .5) +
print(g)
g <- ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 2, radius_b = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "red", alpha = .5) +
print(g)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 2, radius_b = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 2, y_offset = 2,
radius = 3, radius_b = .5, theta_offset = -pi / 4),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 0, radius = 1),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 1),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0.5, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0, radius = 1),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0.5, radius = 1),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 1),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 0, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 0, radius = 1),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 1),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0.5, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 0, radius = 1),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 1),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0.5, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 1),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0, radius = 1),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0.5, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 1),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0, radius = 0.5),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0.5, radius = 1),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 1),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 0.5),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0, radius = 0.5),
color = "black" , fill = "red", alpha = .5)
ggplot() +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0.5, radius = 0.5),
color = "black", fill = "blue", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0, y_offset = 1, radius = 0.7),
color = "black" , fill = "yellow", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 1, y_offset = 1, radius = 0.7),
color = "black" , fill = "green", alpha = .5) +
geom_polygon(aes(x = x, y = y),
data = gen_circle(group = 0L, x_offset = 0.5, y_offset = 0, radius = 0.5),
color = "black" , fill = "red", alpha = .5)
